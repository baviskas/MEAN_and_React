{"ast":null,"code":"var _jsxFileName = \"/Users/baviskas/Desktop/react_training/counter-app/src/components/counter.jsx\";\nimport React, { Component } from 'react';\n\nclass Counter extends Component {\n  constructor() {\n    super();\n    this.state = {\n      count: 1,\n      tags: ['tag1', 'tag2', 'tag3']\n    };\n    this.handleIncrement = this.handleIncrement.bind(this);\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: this.getBadgeClasses(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, this.formatCount()), React.createElement(\"button\", {\n      className: \"btn btn-secondary btn-sm\",\n      onClick: this.handleIncrement,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"Increment\"), this.state.tags.length && React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"Tags List:\"), this.renderTags());\n  }\n\n  handleIncrement() {\n    console.log('clicked', this);\n  }\n\n  renderTags() {\n    if (!this.state.tags.length) return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \" No tags found!\");\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, this.state.tags.map((tag, index) => {\n      return React.createElement(\"li\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, tag);\n    }));\n  }\n\n  getBadgeClasses() {\n    const count = this.state.count;\n    let classes = 'badge  m-2 badge-';\n    classes += count ? 'primary' : 'warning';\n    return classes;\n  }\n\n  formatCount() {\n    const count = this.state.count;\n    return count === 0 ? 'Zero' : count;\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["/Users/baviskas/Desktop/react_training/counter-app/src/components/counter.jsx"],"names":["React","Component","Counter","constructor","state","count","tags","handleIncrement","bind","render","getBadgeClasses","formatCount","length","renderTags","console","log","map","tag","index","classes"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAA+B;AAE3BE,EAAAA,WAAW,GAAG;AACV;AADU,SAIdC,KAJc,GAIN;AACJC,MAAAA,KAAK,EAAE,CADH;AAEJC,MAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB;AAFF,KAJM;AAEV,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAvB;AACH;;AAMDC,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,SAAS,EAAE,KAAKC,eAAL,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0C,KAAKC,WAAL,EAA1C,CADJ,EAEI;AAAQ,MAAA,SAAS,EAAC,0BAAlB;AAA6C,MAAA,OAAO,EAAE,KAAKJ,eAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,EAGK,KAAKH,KAAL,CAAWE,IAAX,CAAgBM,MAAhB,IAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAH/B,EAIK,KAAKC,UAAL,EAJL,CADJ;AAQH;;AAEDN,EAAAA,eAAe,GAAG;AACdO,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsB,IAAtB;AACH;;AAEDF,EAAAA,UAAU,GAAG;AACV,QAAG,CAAC,KAAKT,KAAL,CAAWE,IAAX,CAAgBM,MAApB,EAA4B,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAP;AAE5B,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKR,KAAL,CAAWE,IAAX,CAAgBU,GAAhB,CAAoB,CAACC,GAAD,EAAKC,KAAL,KAAe;AAChC,aAAO;AAAI,QAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiBD,GAAjB,CAAP;AACH,KAFA,CADL,CADJ;AAOF;;AACDP,EAAAA,eAAe,GAAG;AAAA,UACPL,KADO,GACE,KAAKD,KADP,CACPC,KADO;AAEd,QAAIc,OAAO,GAAG,mBAAd;AACAA,IAAAA,OAAO,IAAId,KAAK,GAAG,SAAH,GAAe,SAA/B;AACA,WAAOc,OAAP;AACH;;AAEDR,EAAAA,WAAW,GAAI;AAAA,UACHN,KADG,GACO,KAAKD,KADZ,CACHC,KADG;AAEX,WAAOA,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACH;;AA/C0B;;AAkD/B,eAAeH,OAAf","sourcesContent":["import React,{ Component } from 'react'\n\nclass Counter extends Component{\n\n    constructor() {\n        super();\n        this.handleIncrement = this.handleIncrement.bind(this);\n    }\n    state = {\n        count: 1,\n        tags: ['tag1', 'tag2', 'tag3']\n    };\n\n    render() {\n        return(\n            <React.Fragment>\n                <span className={this.getBadgeClasses()}>{this.formatCount()}</span>\n                <button className='btn btn-secondary btn-sm' onClick={this.handleIncrement}>Increment</button>\n                {this.state.tags.length && <h4>Tags List:</h4>}\n                {this.renderTags()}\n            </React.Fragment>\n        )\n    }\n\n    handleIncrement() {\n        console.log('clicked',this);\n    }\n\n    renderTags() {\n       if(!this.state.tags.length) return <p> No tags found!</p>;\n\n       return (\n           <ul>\n               {this.state.tags.map((tag,index) => {\n                   return <li key={index}>{tag}</li>;\n               })}\n           </ul>\n       );\n    }\n    getBadgeClasses() {\n        const {count} = this.state;\n        let classes = 'badge  m-2 badge-';\n        classes += count ? 'primary' : 'warning';\n        return classes;\n    }\n\n    formatCount () {\n        const { count } = this.state;\n        return count === 0 ? 'Zero' : count;\n    }\n}\n\nexport default Counter;\n"]},"metadata":{},"sourceType":"module"}